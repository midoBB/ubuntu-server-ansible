---
- name: Store MinIO secrets in Vault
  community.hashi_vault.vault_kv2_write:
    url: https://127.0.0.1:8200
    path: minio
    token: "{{ vault_token }}"
    data:
      MINIO_ROOT_USER: "{{ minio_user }}"
      MINIO_ROOT_PASSWORD: "{{ minio_pass }}"

- name: Restart Vault Agent
  ansible.builtin.systemd:
    name: vault-agent
    state: restarted

- name: Wait for Vault Agent to generate MinIO environment file
  ansible.builtin.wait_for:
    path: "{{ vault_agent_secrets_dir }}/minio.env"
    timeout: 60

- name: Create data directory for MinIO
  ansible.builtin.file:
    path: "/home/{{ deploy_user_name }}/podman/minio/data"
    state: directory
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_user_name }}"
    mode: "0755"
    recurse: true

- name: Template the MinIO container file
  ansible.builtin.template:
    src: minio.container.j2
    dest: "/home/{{ deploy_user_name }}/.config/containers/systemd/minio.container"
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_user_name }}"
    mode: "0644"

- name: Reload systemd daemon for the deploy user
  ansible.builtin.systemd:
    scope: user
    daemon_reload: true
  become: true
  become_user: "{{ deploy_user_name }}"

- name: Start MinIO container
  ansible.builtin.systemd:
    name: minio.service
    enabled: true
    scope: user
  become: true
  become_user: "{{ deploy_user_name }}"

- name: Reboot the server
  ansible.builtin.reboot:

- name: Wait for MinIO to become healthy
  ansible.builtin.uri:
    url: "http://127.0.0.1:9000/minio/health/live"
    status_code: 200
  register: minio_health_check
  until: minio_health_check.status == 200
  retries: 30
  delay: 5
  become: true
  become_user: "{{ deploy_user_name }}"


- name: Install MinIO client
  ansible.builtin.get_url:
    url: https://dl.min.io/client/mc/release/linux-amd64/mc
    dest: /usr/local/bin/mc
    mode: "0700"
    owner: "{{ deploy_user_name }}"
    group: "{{ deploy_user_name }}"

- name: Set Minio Alias (necessary for the rest of the playbook)
  ansible.builtin.command:
    cmd: "mc alias set myminio http://127.0.0.1:9000 {{ minio_user }} {{ minio_pass }}"
  changed_when: false
  become: true
  become_user: "{{ deploy_user_name }}"

- name: Create new admin access key for MinIO
  ansible.builtin.command:
    cmd: "mc admin accesskey create myminio"
  register: minio_new_key_result
  changed_when: true
  become: true
  become_user: "{{ deploy_user_name }}"
- name: Save MinIO access and secret keys as facts
  ansible.builtin.set_fact:
    minio_access_key: "{{ minio_new_key_result.stdout | regex_search('Access Key: (\\S+)', '\\1') | first }}"
    minio_secret_key: "{{ minio_new_key_result.stdout | regex_search('Secret Key: (\\S+)', '\\1') | first }}"
  no_log: true

- name: Store MinIO secrets in Vault
  community.hashi_vault.vault_kv2_write:
    url: https://127.0.0.1:8200
    path: minio
    token: "{{ vault_token }}"
    data:
      MINIO_ROOT_USER: "{{ minio_user }}"
      MINIO_ROOT_PASSWORD: "{{ minio_pass }}"
      MINIO_ACCESS_KEY: "{{ minio_access_key }}"
      MINIO_SECRET_KEY: "{{ minio_secret_key }}"

- name: Restart Vault Agent
  ansible.builtin.systemd:
    name: vault
    state: restarted
